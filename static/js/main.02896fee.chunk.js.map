{"version":3,"sources":["omdb_search.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OMDbAPISearch","key","title","a","page","axios","get","then","res","data","catch","err","console","error","App","props","state","query","responseArray","index","totalResults","this","className","movies","map","result","src","Poster","alt","Title","Year","imdbID","button","length","onClick","loadMore","bind","onSubmit","handleSubmit","onChange","handleChange","placeholder","event","userQuery","target","value","setState","preventDefault","response","log","Response","Error","Search","parseInt","_","idx","concat","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAiBeA,E,gFAAf,WAA6BC,EAAaC,GAA1C,2BAAAC,EAAA,6DAAyDC,EAAzD,+BAAwE,EAAxE,kBACWC,IAAMC,IAAN,qDAAwDL,EAAxD,cAAiEC,EAAjE,iBAA+EE,IACrFG,MAAK,SAAAC,GAAQ,OAAOA,EAAIC,QACxBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,OAHhC,4C,wCCsGeG,M,kDA1GX,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IACDC,MAAQ,CACTC,MAAO,GACPC,cAAe,GACfC,MAAO,EACPC,aAAc,EACdP,MAAO,IAPS,E,0CAWxB,WACI,IAAMA,EAA6B,KAArBQ,KAAKL,MAAMH,MAErB,qBAAKS,UAAU,0EAAf,SACI,qBAAKA,UAAU,MAAf,SACMD,KAAKL,MAAMH,UAInB,KACAU,EAASF,KAAKL,MAAME,cACtBG,KAAKL,MAAME,cACVM,KAAI,SAAAhB,GAAG,OAwEEiB,EAxEejB,EA0E7B,sBAAyBc,UAAU,oFAAnC,UACI,qBAAKA,UAAU,iEAAiEI,IAAKD,EAAOE,OAAQC,IAAI,cACxG,uBAAMN,UAAU,gDAAhB,cAAkEG,EAAOI,MAAzE,OACA,uBAAMP,UAAU,8CAAhB,cAAgEG,EAAOK,KAAvE,SAHML,EAAOM,QAFzB,IAAsBN,KAvEP,+CACDO,EAASX,KAAKL,MAAME,cAAce,SAAWZ,KAAKL,MAAMI,aAC1D,KAEI,wBACIE,UAAU,+GACVY,QAASb,KAAKc,SAASC,KAAKf,MAFhC,uBAOR,OACE,sBAAKC,UAAU,gEAAf,UACE,wBAAQA,UAAU,2CAAlB,SACI,qBAAKA,UAAU,WAAf,SAII,sBAAMA,UAAU,oBAAoBe,SAAUhB,KAAKiB,aAAaF,KAAKf,MAArE,SACI,uBAAOC,UAAU,6CAA6CiB,SAAUlB,KAAKmB,aAAaJ,KAAKf,MAAOoB,YAAY,yBAI/H,sBAAKnB,UAAU,oCAAf,UACMT,EACAU,EACAS,U,0BAMb,SAAaU,GACT,IAAMC,EAAYD,EAAME,OAAOC,MAC/BxB,KAAKyB,SAAS,CACV7B,MAAO0B,M,iEAIf,WAAmBD,GAAnB,eAAAvC,EAAA,6DACIuC,EAAMK,iBADV,SAE2B/C,EAAcC,IAAKoB,KAAKL,MAAMC,OAFzD,OAEU+B,EAFV,OAGIpC,QAAQqC,IAAID,GACc,UAAtBA,EAASE,SACT7B,KAAKyB,SAAS,CACV7B,MAAO,GACPC,cAAe,GACfC,MAAO,EACPC,aAAc,EACdP,MAAOmC,EAASG,QAGpB9B,KAAKyB,SAAS,CACV5B,cAAe8B,EAASI,OACxBjC,MAAO,EACPC,aAAciC,SAASL,EAAS5B,cAChCP,MAAO,KAjBnB,gD,oHAsBA,WAAeyC,GAAf,iBAAAnD,EAAA,6DACUoD,EAAMlC,KAAKL,MAAMG,MAAQ,EADnC,SAE2BnB,EAAcC,IAAKoB,KAAKL,MAAMC,MAAOsC,GAFhE,OAEUP,EAFV,OAGI3B,KAAKyB,SAAS,CACV5B,cAAeG,KAAKL,MAAME,cAAcsC,OAAOR,EAASI,QACxDjC,MAAOoC,IALf,gD,4DAtFcE,IAAMC,WCETC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.02896fee.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport interface OMDbResponse {\n    Error: string;\n    Search: Array<OMDbResult>;\n    totalResults: string;\n    Response: string;\n}\n\nexport interface OMDbResult {\n    Title: string;\n    Year: string;\n    imdbID: string;\n    Poster: string;\n    Type: string;\n\n}\nasync function OMDbAPISearch(key: string, title: string, page: Number = 1): Promise<OMDbResponse> {\n    return axios.get(`https://www.omdbapi.com/?type=movie&apikey=${key}&s=${title}&page=${page}`)\n    .then(res => {return res.data})\n    .catch(err => console.error(err));\n}\n\nexport { OMDbAPISearch };\n","import React from 'react';\nimport { OMDbAPISearch, OMDbResult } from './omdb_search';\nimport { key } from './key.json';\n\ninterface AppState {\n    query: string;\n    responseArray: Array<OMDbResult>;\n    index: number;\n    totalResults: number;\n    error: string;\n}\n\nclass App extends React.Component<{}, AppState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            query: \"\",\n            responseArray: [],\n            index: 1,\n            totalResults: 0,\n            error: \"\",\n        };\n    }\n\n    render() {\n        const error = this.state.error !== \"\"\n            ? (\n            <div className=\"text-gray-200 text-2xl font-semibold bg-gray-700 text-center rounded-lg\">\n                <div className=\"m-4\">\n                    { this.state.error }\n                </div>\n            </div>\n            )\n            : null;\n        const movies = this.state.responseArray ?\n            this.state.responseArray\n            .map(res => displayMovie(res))\n            : (<div> no results </div>);\n        const button = this.state.responseArray.length === this.state.totalResults ?\n            null\n            : (\n                <button\n                    className=\"loadMoreButton bg-opacity-60 hover:bg-opacity-100 bg-blue-400 rounded-lg mb-2 text-xl font-medium h-12 w-36 \"\n                    onClick={this.loadMore.bind(this)}>\n                    Load More\n                </button>\n            );\n\n        return (\n          <div className=\"App min-h-screen bg-gradient-to-b from-blue-200 to-purple-200\">\n            <header className=\"App-header flex flex-grow justify-center\">\n                <div className=\"w-96 m-4\">\n                    {/*\n                    <div className=\"text-center\">{\"Query: \" + this.state.query}</div>\n                    */}\n                    <form className=\"query text-center\" onSubmit={this.handleSubmit.bind(this)}>\n                        <input className=\"text-center text-2xl bg-blue-50 rounded-lg\" onChange={this.handleChange.bind(this)} placeholder=\"search a movie\" />\n                    </form>\n                </div>\n            </header>\n           <div className=\"w-auto flex flex-col items-center\">\n               { error }\n               { movies }\n               { button }\n           </div>\n          </div>\n        );\n    }\n\n    handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const userQuery = event.target.value;\n        this.setState({\n            query: userQuery,\n        });\n    }\n\n    async handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const response = await OMDbAPISearch(key, this.state.query)\n        console.log(response);\n        if (response.Response === \"False\") {\n            this.setState({\n                query: \"\",\n                responseArray: [],\n                index: 1,\n                totalResults: 0,\n                error: response.Error,\n            })\n        } else {\n            this.setState({\n                responseArray: response.Search,\n                index: 1,\n                totalResults: parseInt(response.totalResults),\n                error: \"\",\n            });\n        }\n    }\n\n    async loadMore(_: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n        const idx = this.state.index + 1;\n        const response = await OMDbAPISearch(key, this.state.query, idx);\n        this.setState({\n            responseArray: this.state.responseArray.concat(response.Search),\n            index: idx,\n        });\n    }\n}\n\nfunction displayMovie(result: OMDbResult) {\n    return (\n        <div key={result.imdbID} className=\"movie rounded-lg bg-opacity-25 md:w-96 w-11/12 bg-gray-400 m-4 mt-0 flex flex-row\">\n            <img className=\"w-32 flex-shrink-0 rounded-lg text-gray-500 italic text-center\" src={result.Poster} alt=\"no poster\" />\n            <span className=\"title m-2 text-lg text-gray-700 font-semibold\"> {result.Title} </span>\n            <span className=\"year m-2 text-gray-600 text-right flex-grow\"> {result.Year} </span>\n        </div>\n    );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}