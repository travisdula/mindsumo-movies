{"version":3,"sources":["omdb_search.ts","Movie.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OMDbAPISearch","key","title","a","page","axios","get","params","type","apikey","s","then","res","data","catch","err","console","error","OMDbAPIGetByID","id","i","Movie","result","React","useState","expanded","setExpanded","moreInfo","setMoreInfo","onClick","imdbID","className","src","Poster","alt","Title","Year","Plot","App","props","state","query","responseArray","index","totalResults","this","movies","map","button","length","loadMore","bind","onSubmit","handleSubmit","onChange","handleChange","placeholder","event","userQuery","target","value","setState","preventDefault","response","Response","Error","Search","parseInt","_","idx","concat","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2f27c57.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport interface OMDbResponse {\n    Error: string;\n    Search: Array<OMDbSearchResult>;\n    totalResults: string;\n    Response: string;\n}\n\nexport interface OMDbSearchResult {\n    Title: string;\n    Year: string;\n    imdbID: string;\n    Poster: string;\n    Type: string;\n\n}\n\nexport interface DetailedOMDbResponse {\n    Title: string;\n    Year: string;\n    Rated: string;\n    Released: string;\n    Runtime: string;\n    Genre: string;\n    Director: string;\n    Writer: string;\n    Actors: string;\n    Plot: string;\n    Language: string;\n    Country: string;\n    Awards: string;\n    Poster: string;\n    Ratings: Array<Rating>;\n    Metascore: string;\n    imdbRating: string;\n    imdbVotes: string;\n    imdbID: string;\n    Type: string;\n    DVD: string;\n    BoxOffice: string;\n    Production: string;\n    Website: string;\n    Response: string;\n}\n\nexport interface Rating {\n    Source: string;\n    Value: string;\n}\n\nasync function OMDbAPISearch(key: string, title: string, page: Number = 1): Promise<OMDbResponse> {\n    return axios.get(\"https://www.omdbapi.com/\", {\n        params: {\n            type: \"movie\",\n            apikey: key,\n            s: title,\n            page: page,\n        }\n    })\n    .then(res => {return res.data})\n    .catch(err => console.error(err));\n}\n\nasync function OMDbAPIGetByID(key: string, id: string): Promise<DetailedOMDbResponse> {\n    return axios.get(\"https://www.omdbapi.com/\", {\n        params: {\n            apikey: key,\n            i: id,\n        }\n    })\n    .then(res => {return res.data})\n    .catch(err => console.error(err));\n}\n\nexport { OMDbAPISearch, OMDbAPIGetByID };\n","import React from 'react';\nimport { DetailedOMDbResponse, OMDbAPIGetByID } from './omdb_search'\nimport { key  }from './key.json';\n\nexport function Movie({ result }: any) {\n    const [expanded, setExpanded] = React.useState(false);\n    const [moreInfo, setMoreInfo]\n        : [DetailedOMDbResponse | undefined, React.Dispatch<DetailedOMDbResponse | undefined>]\n        = React.useState();\n    return (\n        <button \n            key={result.imdbID}\n            onClick={async () =>\n                {\n                    !(moreInfo && 'Title' in moreInfo) &&\n                        setMoreInfo(await OMDbAPIGetByID(key, result.imdbID));\n                    setExpanded(!expanded);\n                }\n            }\n            className=\"movie transition duration-500 rounded-lg bg-opacity-25 hover:bg-opacity-100 md:w-96 w-11/12 bg-gray-400 m-4 mt-0 \">\n            <div className=\"flex flew-row flex-auto\">\n                <img className=\"w-32 flex-shrink-0 rounded-lg text-gray-500 italic text-center\" src={result.Poster} alt=\"no poster\" />\n                <div className=\"flex flex-col w-full m-2\">\n                    <div className=\"flex flex-row\">\n                        <span className=\"title text-lg text-gray-700 text-left font-semibold flex-grow\"> {result.Title} </span>\n                        <span className=\"year text-gray-600 text-right flex-grow\"> {result.Year} </span>\n                    </div>\n                    { expanded && (<div className=\"text-xs\"> {moreInfo && moreInfo.Plot} </div>) }\n                </div>\n            </div>\n        </button>\n    );\n}\n","import React from 'react';\nimport { OMDbAPISearch, OMDbSearchResult } from './omdb_search';\nimport { key } from './key.json';\nimport { Movie } from './Movie';\n\ninterface AppState {\n    query: string;\n    responseArray: Array<OMDbSearchResult>;\n    index: number;\n    totalResults: number;\n    error: string;\n}\n\nclass App extends React.Component<{}, AppState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            query: \"\",\n            responseArray: [],\n            index: 1,\n            totalResults: 0,\n            error: \"\",\n        };\n    }\n\n    render() {\n        const error = this.state.error !== \"\"\n            ? (\n            <div className=\"text-gray-200 text-2xl font-semibold bg-gray-700 text-center rounded-lg\">\n                <div className=\"m-4\">\n                    { this.state.error }\n                </div>\n            </div>\n            )\n            : null;\n        const movies = this.state.responseArray ?\n            this.state.responseArray\n            .map(res => (<Movie result={res}/>))\n            : (<div> no results </div>);\n        const button = this.state.responseArray.length === this.state.totalResults ?\n            null\n            : (\n                <button\n                    className=\"loadMoreButton transition duration-500 bg-opacity-60 hover:bg-opacity-100 bg-blue-400 rounded-lg mb-2 text-xl font-medium h-12 w-36 \"\n                    onClick={this.loadMore.bind(this)}>\n                    Load More\n                </button>\n            );\n\n        return (\n          <div className=\"App min-h-screen bg-gradient-to-b from-blue-200 to-purple-200\">\n            <header className=\"App-header flex flex-grow justify-center\">\n                <div className=\"w-96 m-4\">\n                    {/*\n                    <div className=\"text-center\">{\"Query: \" + this.state.query}</div>\n                    */}\n                    <form className=\"query text-center\" onSubmit={this.handleSubmit.bind(this)}>\n                        <input className=\"text-center text-2xl bg-blue-50 rounded-lg\" onChange={this.handleChange.bind(this)} placeholder=\"search a movie\" />\n                    </form>\n                </div>\n            </header>\n           <div className=\"w-auto flex flex-col items-center\">\n               { error }\n               { movies }\n               { button }\n           </div>\n          </div>\n        );\n    }\n\n    handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const userQuery = event.target.value;\n        this.setState({\n            query: userQuery,\n        });\n    }\n\n    async handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const response = await OMDbAPISearch(key, this.state.query)\n        if (response.Response === \"False\") {\n            this.setState({\n                query: \"\",\n                responseArray: [],\n                index: 1,\n                totalResults: 0,\n                error: response.Error,\n            })\n        } else {\n            this.setState({\n                responseArray: response.Search,\n                index: 1,\n                totalResults: parseInt(response.totalResults),\n                error: \"\",\n            });\n        }\n    }\n\n    async loadMore(_: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n        const idx = this.state.index + 1;\n        const response = await OMDbAPISearch(key, this.state.query, idx);\n        this.setState({\n            responseArray: this.state.responseArray.concat(response.Search),\n            index: idx,\n        });\n    }\n}\n\n\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}